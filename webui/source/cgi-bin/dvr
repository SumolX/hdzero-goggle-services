#!/bin/bash

# Includes
. constants
. utils

# Handlers
on_dvr() {
    echo "Content-Type: text/html"
    echo ""
    shopt -s nullglob
    for file in ${MOVIE_PATH}/*.ts ${MOVIE_PATH}/*.mp4; do
        body="$body $(echo "$(ls -l $file)" | awk '{printf "{\"date\":\"%s %s %s\",\"size\":%s,", $6,$7,$8,$5}')"
        body="$body \"file\":\"${file##*/}\"},"
    done
    echo "{ \"dvr\":[ $(sed 's/,*$//'<<<$body) ] }"
}

on_dvr_download() {
    utils_send_binary_file "${MOVIE_PATH}" "$1"
}

on_dvr_rename() {
    for file in ${MOVIE_PATH}/$1.*; do
        #mv file $2+ext
	echo ""
    done
    echo "Status: 200 OK"
}

on_dvr_delete() {
    if test -f ${MOVIE_PATH}/$1; then
        rm -rf ${MOVIE_PATH}/${1%.*}.*
    fi
    echo "Status: 200 OK"
}

on_dvr_m3u8() {
    echo "#EXTM3U" > ${HDZ_M3U8}
    echo "#EXT-X-VERSION:3" >> ${HDZ_M3U8}
    echo "#EXT-X-MEDIA-SEQUENCE:0" >> ${HDZ_M3U8}
    echo "#EXT-X-ALLOW-CACHE:YES" >> ${HDZ_M3U8}
    echo "#EXT-X-TARGETDURATION:3600" >> ${HDZ_M3U8}
    echo "#EXTINF:3600.000000," >> ${HDZ_M3U8}
    echo "${MEDIA_PATH}/$1" >> ${HDZ_M3U8}
    echo "#EXT-X-ENDLIST" >> ${HDZ_M3U8}

    echo "Status: 200 OK"
}

on_dvr_image() {
    utils_send_image_file "${MOVIE_PATH}" "$1"
}

on_dvr_play() {
    utils_send_video_file "${MOVIE_PATH}" "$1"
}

on_dvr_stop() {
    echo "Content-Type: text/html"
    echo ""
    echo "Stop command not implemented"
}

# Parse Request
if [ -z $QUERY_STRING ]; then
    on_dvr
else
    kv=(${QUERY_STRING//=/ })
    if [ ${kv[0]} == "download" ]; then
        on_dvr_download "${kv[1]}"
    elif [ ${kv[0]} == "rename" ]; then
        on_dvr_rename "${kv[1]}" "${kv[2]}"
    elif [ ${kv[0]} == "delete" ]; then
        on_dvr_delete "${kv[1]}"
    elif [ ${kv[0]} == "m3u8" ]; then
        on_dvr_m3u8 "${kv[1]}"
    elif [ ${kv[0]} == "image" ]; then
        on_dvr_image "${kv[1]}"
    elif [ ${kv[0]} == "play" ]; then
        on_dvr_play "${kv[1]}"
    elif [ ${kv[0]} == "stop" ]; then
        on_dvr_stop
    fi
fi

