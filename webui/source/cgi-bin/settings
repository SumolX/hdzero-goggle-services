#!/bin/bash

# Includes
. ./constants
. ./utils

# Handlers

# Send the entire settings file
on_settings() {
    echo "Content-Type: application/json"
    echo ""

    utils_is_action_authorized "${HTTP_COOKIE#token=}"
    if test "$?" -eq 0 -a -f ${SETTING_PATH}; then
        count=0
        body=""
        settings=""
        section=""
        while read line; do
          if [ ! -z "${line}" ]; then
              ((count++))
              IFS="=" read key value <<< "$line"
              if [ ! -z "${key}" ] && [ ! -z "${value}" ]; then
                # settings
                settings="${settings} {\"key\":\"${key}\" \"value\":\"${value}\"},"
              elif [ ! -z "${key}" ] && [ $count -gt 1 ]; then
                # sections
                settings="${settings%?}"
                body="${body} \"${section}\": [ $settings ],"
                section=$(echo "$key" | sed 's/[][]//g')
                settings=
              else
                # first section
                section=$(echo "$key" | sed 's/[][]//g')
              fi
          fi
        done < "$SETTING_PATH"
        settings="${settings%?}"
        body="${body} \"${section}\": [ $settings ]"
        echo "{ \"file\": { $body } }"
    else
        echo "Status: 401"
    fi
}

# Send a settings section with line numbers
on_section_read() {
  echo "Content-Type: application/json"
  echo ""
 
  utils_is_action_authorized "${HTTP_COOKIE#token=}"
  if test "$?" -eq 0 -a -f ${SETTING_PATH}; then
     settings=""
     count=$(sed -n "/\[$1\]/{=;q;}" "$SETTING_PATH")
     while read line; do
       IFS="=" read key value <<< "$line"
       if [ ! -z "${key}" ] && [ ! -z "${value}" ]; then
          # settings
      	  ((count++))
          settings="${settings} {\"line\":\"${count}\" \"key\":\"${key}\" \"value\":\"${value}\"},"
       fi
     done < <(sed -n "/\[$1\]/,/\[/p" "$SETTING_PATH")
     settings="${settings%?}"
     echo "{\"$1\": [ $settings ] }"
   else
        echo "Status: 401"
   fi
}

# Change a setting by line number
on_setting_change() {
  echo "Content-Type: text/html"
  echo ""

  utils_is_action_authorized "${HTTP_COOKIE#token=}"
  if test "$?" -eq 0 -a -f ${SETTING_PATH}; then
     sed -i "${1}s/.*/${2}/" "$SETTING_PATH"
     if [ $? -eq 0 ]; then
        echo "Status: 200 OK"
     else
        echo "Status: 500"
     fi
  else
     echo "Status: 401"
  fi
}

# Add a setting at line number, move everthing after down one line
on_setting_insert() {
  echo "Content-Type: text/html"
  echo ""

  utils_is_action_authorized "${HTTP_COOKIE#token=}"
  if test "$?" -eq 0 -a -f ${SETTING_PATH}; then
     sed -i "${1}i ${2}" "$SETTING_PATH"
     if [ $? -eq 0 ]; then
        echo "Status: 200 OK"
     else
        echo "Status: 500"
     fi
  else
     echo "Status: 401"
  fi
}

# Delete a setting at line number, move everthing after up one line
on_setting_delete() {
  echo "Content-Type: text/html"
  echo ""
  
  utils_is_action_authorized "${HTTP_COOKIE#token=}"
  if test "$?" -eq 0 -a -f ${SETTING_PATH}; then
     sed -i "${1}d" "$SETTING_PATH"
     if [ $? -eq 0 ]; then
        echo "Status: 200 OK"
     else
        echo "Status: 500"
     fi
  else
     echo "Status: 401"
  fi
}

# backup the setting file to the sdcard, overwrite
on_backup() {
  echo "Content-Type: text/html"
  echo ""
  
  utils_is_action_authorized "${HTTP_COOKIE#token=}"
  if test "$?" -eq 0 -a -f ${SETTING_PATH} -a ! -z "$(mount | grep ${SDC_PATH})"; then
     cp ${SETTING_PATH} "${SDC_PATH}settings.bak"
     if [ $? -eq 0 ]; then
        echo "Status: 200 OK"
     else
        echo "Status: 500"
     fi
  else
     echo "Status: 401"
  fi
}

# delete the settings file, application will load defaults on next boot
on_reset() {
  echo "Content-Type: text/html"
  echo ""
  
  utils_is_action_authorized "${HTTP_COOKIE#token=}"
  if test "$?" -eq 0 -a -f ${SETTING_PATH}; then
     rm -f ${SETTING_PATH}
     if [ $? -eq 0 ]; then
        echo "Status: 200 OK"
     else
        echo "Status: 500"
     fi
  else
     echo "Status: 401"
  fi
}

# Parse Request
if [ -z $QUERY_STRING ]; then
    on_settings
else
    IFS="&"
    set -- $QUERY_STRING
    key="${1%=*}"
    if [ ${key} == "section" ]; then
	on_section_read "${1#*=}"
    elif [ ${key} == "change" ]; then
	on_setting_change "${1#*=}" "${2#*=}" 
    elif [ ${key} == "delete" ]; then
        on_setting_delete "${1#*=}"
    elif [ ${key} == "insert" ]; then
        on_setting_insert "${1#*=}" "${2#*=}"
    elif [ ${key} == "backup" ]; then
        on_backup
    elif [ ${key} == "reset" ]; then
        on_reset 
    fi
fi

